{"version":3,"sources":["components/Togglable.js","components/Likes.js","components/Blogs.js","components/Login.js","components/CreateNewBlog.js","components/LoggedIn.js","components/Notification.js","components/Confirmation.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","expandContainer","buttonLabel","style","className","children","title","onClick","cancelLabel","name","displayName","Likes","blog","updateBlog","likes","blogLikes","setBlogLikes","event","preventDefault","id","addLike","Blogs","blogs","removeBlog","map","i","key","url","author","LoginForm","handleLogin","username","password","handleUsername","handlePassword","onSubmit","type","value","onChange","input","CreateNewBlog","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","target","LoggedIn","handleLogout","user","Notification","message","Confirmation","token","getAll","a","axios","get","req","data","create","newBlog","config","headers","Authorization","post","res","setToken","newToken","update","updatedBlog","put","deleteBlog","delete","login","credentials","App","setBlogs","setUsername","setPassword","setUser","errorMessage","setErrorMessage","confirmMessage","setConfirmMessage","useEffect","blogService","then","initialBlogs","sort","b","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","blogFormRef","useRef","Login","removeItem","renturnedBlog","current","concat","catch","error","console","log","returnedObj","newBlogsState","blogIndex","findIndex","el","confirm","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0947b3f5.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Togglable = React.forwardRef((props, ref) => {\n\tconst [visible, setVisible] = useState(false)\n\n\tconst hideWhenVisible = { display: visible ? 'none' : '' }\n\tconst showWhenVisible = { display: visible ? '' : 'none' }\n\n\tconst toggleVisibility = () => {\n\t\tsetVisible(!visible)\n\t}\n\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\ttoggleVisibility\n\t\t}\n\t})\n\n\tconst expandContainer = props.buttonLabel !== 'view'\n\t\t?   <div style={showWhenVisible} className=\"visibleTogglable\">\n\t\t\t{props.children}\n\t\t\t{props.title || ''} <button onClick={toggleVisibility}> {props.cancelLabel} </button>\n\t\t</div>\n\t\t:   <div style={showWhenVisible} className=\"visibleTogglable\">\n\t\t\t{props.title || ''} <button onClick={toggleVisibility}> {props.cancelLabel} </button>\n\t\t\t{props.children}\n\t\t</div>\n\n\treturn (\n\t\t<div>\n\t\t\t<div style={hideWhenVisible} className=\"togglableContent\">\n\t\t\t\t{props.title} <button name={props.buttonLabel} onClick={toggleVisibility}> {props.buttonLabel} </button>\n\t\t\t</div>\n\t\t\t{expandContainer}\n\n\t\t</div>\n\t)\n})\n\nTogglable.propTypes = {\n\tbuttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState } from 'react'\n\n\n\nconst Likes = ({ blog, updateBlog }) => {\n\tconst [blogLikes, setBlogLikes] = useState(blog.likes)\n\n\tconst addLike = event => {\n\t\tevent.preventDefault()\n\n\t\tupdateBlog(blog.id, {\n\t\t\tlikes: blogLikes + 1,\n\t\t})\n\n\t\tsetBlogLikes(blogLikes + 1)\n\n\t}\n\n\n\treturn (\n\t\t<div>\n            Likes: {blogLikes}\n\t\t\t<button name=\"likeButton\" onClick={event => addLike(event)}>like</button>\n\t\t</div>\n\t)\n}\n\nexport default Likes","import React from 'react'\nimport Togglable from '../components/Togglable'\nimport Likes from '../components/Likes'\n\nconst Blogs = ({ blogs, updateBlog, removeBlog }) => {\n\n\treturn (\n\t\t<div className=\"blogDiv\">\n\t\t\t<h2>Blogs</h2>\n\t\t\t{blogs.map((blog, i) =>\n\t\t\t\t<div key={i} className='blogOnList'>\n\t\t\t\t\t<Togglable title={blog.title}buttonLabel='view' cancelLabel='hide'>\n\t\t\t\t\t\t<div>URL: {blog.url}</div>\n\t\t\t\t\t\t<Likes blog={blog} updateBlog={updateBlog} />\n\t\t\t\t\t\t<div>Author: {blog.author}</div>\n\t\t\t\t\t\t<button name=\"deleteBlog\" onClick={() => removeBlog(blog.id, blog)}>Delete</button>\n\t\t\t\t\t</Togglable>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Blogs\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({ handleLogin, username, password, handleUsername, handlePassword }) => (\n\t<form onSubmit={handleLogin} className=\"loginForm\">\n\t\t<h3>Login to start</h3>\n\t\t<div>\n            Username\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={username}\n\t\t\t\tname=\"Username\"\n\t\t\t\tonChange={input => handleUsername(input)}\n\t\t\t/>\n\t\t</div>\n\t\t<div>\n            Password\n\t\t\t<input\n\t\t\t\ttype=\"password\"\n\t\t\t\tvalue={password}\n\t\t\t\tname=\"Password\"\n\t\t\t\tonChange={input => handlePassword(input)}\n\t\t\t/>\n\t\t</div>\n\t\t<button name=\"loginSubmit\" type=\"submit\">login</button>\n\t</form>\n)\n\nLoginForm.propTypes = {\n\thandleLogin: PropTypes.func.isRequired,\n\thandleUsername: PropTypes.func.isRequired,\n\thandlePassword: PropTypes.func.isRequired,\n\tusername: PropTypes.string.isRequired,\n\tpassword: PropTypes.string.isRequired\n}\nexport default LoginForm","import React, { useState } from 'react'\n\nconst CreateNewBlog = ({ createBlog }) => {\n\tconst [newTitle, setNewTitle] = useState('')\n\tconst [newAuthor, setNewAuthor] = useState('')\n\tconst [newUrl, setNewUrl] = useState('')\n\n\tconst handleTitleChange = event => {\n\t\tsetNewTitle(event.target.value)\n\t}\n\tconst handleAuthorChange = event => {\n\t\tsetNewAuthor(event.target.value)\n\t}\n\tconst handleUrlChange = event => {\n\t\tsetNewUrl(event.target.value)\n\t}\n\n\tconst addNew = event => {\n\t\tevent.preventDefault()\n\n\t\tcreateBlog({\n\t\t\ttitle: newTitle,\n\t\t\tauthor: newAuthor,\n\t\t\turl: newUrl\n\t\t})\n\n\t\tsetNewTitle('')\n\t\tsetNewAuthor('')\n\t\tsetNewUrl('')\n\n\t}\n\n\n\treturn (\n\t\t<form onSubmit={addNew} className=\"blogForm\">\n\t\t\t<h2>Create New Blog</h2>\n\t\t\t<div>\n            Title:\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={newTitle}\n\t\t\t\t\tname=\"New Title\"\n\t\t\t\t\tonChange={input => handleTitleChange(input)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n            Author:\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={newAuthor}\n\t\t\t\t\tname=\"New Author\"\n\t\t\t\t\tonChange={input => handleAuthorChange(input)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n            Url:\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={newUrl}\n\t\t\t\t\tname=\"New Url\"\n\t\t\t\t\tonChange={input => handleUrlChange(input)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button name=\"Blog Submit\" type=\"submit\">Create</button>\n\t\t</form>\n\t)\n}\n\n\nexport default CreateNewBlog","import React from 'react'\n\nconst LoggedIn = ({ handleLogout, user }) => {\n\n\treturn (\n\t\t<p>\n            Logged in as {user.name}\n\t\t\t<input\n\t\t\t\ttype=\"button\"\n\t\t\t\tvalue=\"logout\"\n\t\t\t\tname=\"logout\"\n\t\t\t\tonClick={handleLogout}\n\t\t\t/>\n\t\t</p>\n\t)\n}\n\nexport default LoggedIn","import React from 'react'\n\nconst Notification = ({ message }) => {\n\tif(message === null) return null\n\n\treturn (\n\t\t<div className='error'>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\n\nexport default Notification","import React from 'react'\n\nconst Confirmation = ({ message }) => {\n\tif(message === null) return null\n\n\treturn (\n\t\t<div className='confirmed'>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\n\nexport default Confirmation","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n\ttoken = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n\tconst req = await axios.get(baseUrl)\n\n\treturn req.data\n}\n\nconst create = async (newBlog) => {\n\tconst config = {\n\t\theaders: { Authorization: token }\n\t}\n\tconst res = await axios.post(baseUrl, newBlog, config)\n\treturn res.data\n}\n\nconst update = async (id, updatedBlog) => {\n\n\tconst res = await axios.put(`${baseUrl}/${id}`, updatedBlog)\n\treturn res.data\n}\n\nconst deleteBlog = async (id) => {\n\tconst config = {\n\t\theaders: { Authorization: token }\n\t}\n\n\tconst res = await axios.delete(`${baseUrl}/${id}`, config)\n\n\treturn res.data\n}\n\nexport default { getAll, create, setToken, update, deleteBlog }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n\tconst res = await axios.post(baseUrl, credentials)\n\treturn res.data\n}\n\nexport default { login }\n\n","import React, { useEffect, useState, useRef } from 'react'\nimport Blogs from './components/Blogs'\nimport LoginForm from './components/Login'\nimport CreateNewBlog from './components/CreateNewBlog'\nimport LoggedIn from './components/LoggedIn'\nimport Notification from './components/Notification'\nimport Confirmation from './components/Confirmation'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\n\n\nconst App = () => {\n\tconst [blogs, setBlogs] = useState([])\n\tconst [username, setUsername] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [user, setUser] = useState(null)\n\tconst [errorMessage, setErrorMessage] = useState(null)\n\tconst [confirmMessage, setConfirmMessage] = useState(null)\n\n\n\tuseEffect(() => {\n\t\tblogService\n\t\t\t.getAll()\n\t\t\t.then(initialBlogs => setBlogs(initialBlogs.sort((a,b) => b.likes - a.likes)))\n\t}, [])\n\n\n\n\tuseEffect(() => {\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedUser')\n\t\tif (loggedUserJSON) {\n\t\t\tconst user = JSON.parse(loggedUserJSON)\n\t\t\tsetUser(user)\n\t\t\tblogService.setToken(user.token)\n\t\t}\n\t}, [])\n\n\tconst handleLogin = async event => {\n\t\tevent.preventDefault()\n\n\t\ttry {\n\t\t\tconst user = await loginService.login({\n\t\t\t\tusername, password\n\t\t\t})\n\n\t\t\twindow.localStorage.setItem(\n\t\t\t\t'loggedUser', JSON.stringify(user)\n\t\t\t)\n\n\t\t\tblogService.setToken(user.token)\n\t\t\tsetUser(user)\n\t\t\tsetUsername('')\n\t\t\tsetPassword('')\n\t\t}\n\t\tcatch (exception) {\n\t\t\tsetErrorMessage('Invalid username or password')\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetErrorMessage(null)\n\t\t\t}, 5000)\n\t\t}\n\t}\n\n\tconst handleUsername = event => {\n\t\tsetUsername(event.target.value)\n\t}\n\tconst handlePassword = event => {\n\t\tsetPassword(event.target.value)\n\t}\n\n\tconst handleLogout = () => {\n\t\tsetUser(null)\n\t\twindow.localStorage.removeItem('loggedUser')\n\t}\n\n\tconst addNewBlog = (newBlog) => {\n\n\t\tblogService\n\t\t\t.create(newBlog)\n\t\t\t.then(renturnedBlog => {\n\t\t\t\tblogFormRef.current.toggleVisibility()\n\n\t\t\t\tsetConfirmMessage(`${user.name} added a new blog by ${renturnedBlog.author}`)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetConfirmMessage(null)\n\t\t\t\t}, 3000)\n\n\t\t\t\tsetBlogs(blogs.concat(renturnedBlog))\n\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetErrorMessage(error.message)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t}, 3000)\n\t\t\t})\n\t}\n\tconst updateBlog = (id, updatedBlog) => {\n\n\n\t\tblogService\n\t\t\t.update(id, updatedBlog)\n\t\t\t.then(returnedObj => {\n\n\t\t\t\tlet newBlogsState = blogs\n\t\t\t\tconst blogIndex = blogs.findIndex(el => el.id === id)\n\t\t\t\tnewBlogsState[blogIndex] = { ...newBlogsState[blogIndex], likes: returnedObj.likes }\n\n\t\t\t\tsetBlogs(newBlogsState)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error.message)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t}, 3000)\n\t\t\t})\n\t}\n\n\tconst removeBlog = (id, blog) => {\n\n\t\tlet confirmed = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\n\n\t\tif( confirmed ) {\n\n\t\t\tblogService\n\t\t\t\t.deleteBlog(id)\n\t\t\t\t.then(() => setBlogs(blogs.filter(b => b.id !== id)))\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetConfirmMessage(`${blog.title} by ${blog.author} removed from blog list`)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetConfirmMessage(null)\n\t\t\t\t\t}, 3000)\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tsetErrorMessage(error.message)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t\t}, 3000)\n\t\t\t\t})\n\t\t}\n\n\n\t}\n\tconst blogFormRef = useRef()\n\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Blog App</h1>\n\t\t\t<Notification message={errorMessage} />\n\t\t\t<Confirmation message={confirmMessage}/>\n\n\t\t\t{user === null\n\t\t\t\t//  <Togglable buttonLabel='Login to start' cancelLabel='Cancel'>\n\t\t\t\t?\t<LoginForm\n\t\t\t\t\thandleLogin={handleLogin}\n\t\t\t\t\tusername={username}\n\t\t\t\t\tpassword={password}\n\t\t\t\t\thandleUsername={handleUsername}\n\t\t\t\t\thandlePassword={handlePassword}\n\t\t\t\t/>\n\t\t\t\t// </Togglable>\n\n\t\t\t\t: <>\n\t\t\t\t\t<LoggedIn\n\t\t\t\t\t\thandleLogout={handleLogout}\n\t\t\t\t\t\tuser={user}\n\t\t\t\t\t/>\n\t\t\t\t\t<Togglable\n\t\t\t\t\t\tbuttonLabel='Add new blog'\n\t\t\t\t\t\tcancelLabel='Cancel'\n\t\t\t\t\t\tref={blogFormRef}>\n\t\t\t\t\t\t<CreateNewBlog\n\t\t\t\t\t\t\tcreateBlog={addNewBlog}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Togglable>\n\t\t\t\t\t<Blogs\n\t\t\t\t\t\tblogs={blogs}\n\t\t\t\t\t\tupdateBlog={updateBlog}\n\t\t\t\t\t\tremoveBlog={removeBlog}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n"],"sourceRoot":""}